{
    "name": "sumo-query-language",
    "displayName": "Sumo Logic Query Language",
    "description": "Language support for Sumo Logic search queries with syntax highlighting, snippets, and autocomplete. Includes Sumo Logic Explorer for managing connection profiles, running queries, and browsing Sumo Logic content directly from VS Code.",
    "version": "0.2.1",
    "publisher": "RickJury",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/rjury-sumo/Hajime"
    },
    "bugs": {
        "url": "https://github.com/rjury-sumo/Hajime/issues"
    },
    "homepage": "https://github.com/rjury-sumo/Hajime#readme",
    "icon": "resources/icon.png",
    "galleryBanner": {
        "color": "#1e1e1e",
        "theme": "dark"
    },
    "keywords": [
        "sumo",
        "sumo logic",
        "query",
        "log analytics",
        "search",
        "observability",
        "monitoring",
        "logs",
        "SIEM",
        "security"
    ],
    "qna": "marketplace",
    "engines": {
        "vscode": "^1.100.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets"
    ],
    "main": "./out/extension.js",
    "activationEvents": [
        "onLanguage:sumo"
    ],
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "sumo-explorer",
                    "title": "Sumo Logic",
                    "icon": "resources/sumo-icon.svg"
                }
            ]
        },
        "views": {
            "sumo-explorer": [
                {
                    "id": "sumoExplorer",
                    "name": "Explorer",
                    "contextualTitle": "Sumo Logic Explorer"
                }
            ]
        },
        "configuration": {
            "title": "Sumo Logic",
            "properties": {
                "sumologic.profiles": {
                    "type": "array",
                    "default": [],
                    "description": "Configured Sumo Logic connection profiles"
                },
                "sumologic.activeProfile": {
                    "type": "string",
                    "description": "Currently active connection profile"
                },
                "sumologic.fileStoragePath": {
                    "type": "string",
                    "default": "",
                    "description": "Directory path for storing profile-specific files. If empty (recommended), defaults to ~/.sumologic. Supports ${userHome} and ${workspaceFolder} variables. Can be absolute or relative path."
                },
                "sumologic.webviewPageSize": {
                    "type": "number",
                    "default": 100,
                    "minimum": 10,
                    "maximum": 10000,
                    "description": "Number of rows to display per page in webview query results"
                },
                "sumologic.instanceName": {
                    "type": "string",
                    "markdownDescription": "**⚠️ Deprecated:** This global setting is deprecated. Please set the instance name per profile using the 'Edit Profile' command instead.\n\n(Legacy) Custom instance name for web UI URLs (e.g., rick.au.sumologic.com). If not set, defaults to service.<endpoint>.sumologic.com or service.sumologic.com for us1/prod",
                    "deprecationMessage": "This global setting is deprecated. Use per-profile instance name settings instead (Edit Profile command)."
                }
            }
        },
        "commands": [
            {
                "command": "sumologic.createProfile",
                "title": "Sumo Logic: Create/Update Connection Profile"
            },
            {
                "command": "sumologic.switchProfile",
                "title": "Sumo Logic: Switch Profile"
            },
            {
                "command": "sumologic.listProfiles",
                "title": "Sumo Logic: List Profiles"
            },
            {
                "command": "sumologic.deleteProfile",
                "title": "Sumo Logic: Delete Profile"
            },
            {
                "command": "sumologic.editProfile",
                "title": "Sumo Logic: Edit Profile",
                "icon": "$(edit)"
            },
            {
                "command": "sumologic.repairProfileCredentials",
                "title": "Sumo Logic: Repair Profile Credentials"
            },
            {
                "command": "sumologic.runQuery",
                "title": "Sumo Logic: Run Query",
                "icon": "$(play)"
            },
            {
                "command": "sumologic.testConnection",
                "title": "Sumo Logic: Test Connection"
            },
            {
                "command": "sumologic.fetchCustomFields",
                "title": "Sumo Logic: Fetch Custom Fields for Autocomplete"
            },
            {
                "command": "sumologic.fetchPartitions",
                "title": "Sumo Logic: Fetch Partitions for Autocomplete"
            },
            {
                "command": "sumologic.fetchCollectors",
                "title": "Sumo Logic: Fetch Collectors"
            },
            {
                "command": "sumologic.getCollector",
                "title": "Sumo Logic: Get Collector by ID"
            },
            {
                "command": "sumologic.getSources",
                "title": "Sumo Logic: Get Sources for Collector"
            },
            {
                "command": "sumologic.viewAutocomplete",
                "title": "Sumo Logic: View Autocomplete Data"
            },
            {
                "command": "sumologic.clearAutocomplete",
                "title": "Sumo Logic: Clear Autocomplete Data"
            },
            {
                "command": "sumologic.getPersonalFolder",
                "title": "Sumo Logic: Get Personal Folder"
            },
            {
                "command": "sumologic.getFolder",
                "title": "Sumo Logic: Get Folder by ID"
            },
            {
                "command": "sumologic.getContentByPath",
                "title": "Sumo Logic: Get Content by Path"
            },
            {
                "command": "sumologic.getContentById",
                "title": "Sumo Logic: Get Content Path by ID"
            },
            {
                "command": "sumologic.exportContent",
                "title": "Sumo Logic: Export Content by ID"
            },
            {
                "command": "sumologic.exportAdminRecommended",
                "title": "Sumo Logic: Export Admin Recommended Folder"
            },
            {
                "command": "sumologic.exportGlobalFolder",
                "title": "Sumo Logic: Export Global Folder"
            },
            {
                "command": "sumologic.exportInstalledApps",
                "title": "Sumo Logic: Export Installed Apps Folder"
            },
            {
                "command": "sumologic.chartCSV",
                "title": "Sumo Logic: Chart CSV Data",
                "icon": "$(graph)"
            },
            {
                "command": "sumologic.runQueryAndChart",
                "title": "Sumo Logic: Run Query and Chart Results",
                "icon": "$(graph-line)"
            },
            {
                "command": "sumologic.runQueryWebview",
                "title": "Sumo Logic: Run Query in Webview",
                "icon": "$(table)"
            },
            {
                "command": "sumologic.cleanupOldFiles",
                "title": "Sumo Logic: Cleanup Old Files"
            },
            {
                "command": "sumologic.cacheKeyMetadata",
                "title": "Sumo Logic: Cache Key Metadata"
            },
            {
                "command": "sumologic.newSumoFile",
                "title": "Sumo Logic: New Query File"
            },
            {
                "command": "sumologic.refreshExplorer",
                "title": "Sumo Logic: Refresh Explorer",
                "icon": "$(refresh)"
            },
            {
                "command": "sumologic.openSearchInWeb",
                "title": "Sumo Logic: Open Search in Web UI",
                "icon": "$(globe)"
            },
            {
                "command": "sumologic.revealStorageInExplorer",
                "title": "Reveal in File Explorer",
                "icon": "$(folder-opened)"
            },
            {
                "command": "sumologic.deleteStorageItem",
                "title": "Delete",
                "icon": "$(trash)"
            },
            {
                "command": "sumologic.copyStoragePath",
                "title": "Copy Path",
                "icon": "$(clippy)"
            },
            {
                "command": "sumologic.openStorageInTerminal",
                "title": "Open in Integrated Terminal",
                "icon": "$(terminal)"
            },
            {
                "command": "sumologic.openQueryResultAsWebview",
                "title": "Open Query Results as Webview",
                "icon": "$(table)"
            },
            {
                "command": "sumologic.viewLibraryNodeDetails",
                "title": "View Library Content Details",
                "icon": "$(info)"
            },
            {
                "command": "sumologic.openLibraryNodeJson",
                "title": "Open Library Content JSON",
                "icon": "$(json)"
            },
            {
                "command": "sumologic.openLibraryNodeInWeb",
                "title": "Open in Sumo Logic Web UI",
                "icon": "$(globe)"
            },
            {
                "command": "sumologic.copyLibraryNodeId",
                "title": "Copy Content ID",
                "icon": "$(clippy)"
            },
            {
                "command": "sumologic.copyLibraryNodePath",
                "title": "Copy Content Path",
                "icon": "$(clippy)"
            },
            {
                "command": "sumologic.refreshLibraryNode",
                "title": "Refresh Library Node",
                "icon": "$(refresh)"
            },
            {
                "command": "sumologic.exportLibraryNodeToFile",
                "title": "Export Library Content to File",
                "icon": "$(export)"
            },
            {
                "command": "sumologic.openDatabaseViewer",
                "title": "Sumo Logic: Open Database Viewer",
                "icon": "$(database)"
            },
            {
                "command": "sumologic.viewDashboards",
                "title": "Sumo Logic: View Dashboards",
                "icon": "$(dashboard)"
            },
            {
                "command": "sumologic.listMyDashboards",
                "title": "Sumo Logic: List My Dashboards",
                "icon": "$(cloud-download)"
            },
            {
                "command": "sumologic.getDashboardById",
                "title": "Sumo Logic: Get Dashboard by ID",
                "icon": "$(search)"
            },
            {
                "command": "sumologic.fetchRecursiveFolder",
                "title": "Fetch All Subfolders Recursively",
                "icon": "$(cloud-download)"
            },
            {
                "command": "sumologic.openExportedContent",
                "title": "Sumo Logic: Open Exported Content JSON",
                "icon": "$(file-code)"
            },
            {
                "command": "sumologic.createScope",
                "title": "Sumo Logic: Create Scope",
                "icon": "$(add)"
            },
            {
                "command": "sumologic.editScope",
                "title": "Edit Scope",
                "icon": "$(edit)"
            },
            {
                "command": "sumologic.deleteScope",
                "title": "Delete Scope",
                "icon": "$(trash)"
            },
            {
                "command": "sumologic.listScopes",
                "title": "Sumo Logic: List Scopes"
            },
            {
                "command": "sumologic.viewScopesOverview",
                "title": "View Scopes Overview"
            },
            {
                "command": "sumologic.viewScope",
                "title": "View Scope"
            },
            {
                "command": "sumologic.profileScope",
                "title": "Profile Scope (Facets)"
            },
            {
                "command": "sumologic.sampleScopeLogs",
                "title": "Sample Scope Logs"
            },
            {
                "command": "sumologic.cacheScopeMetadata",
                "title": "Cache Scope Metadata"
            },
            {
                "command": "sumologic.viewAccount",
                "title": "Sumo Logic: View Account Management",
                "icon": "$(organization)"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "sumologic.refreshExplorer",
                    "when": "view == sumoExplorer",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.createProfile",
                    "when": "view == sumoExplorer",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "sumologic.createProfile",
                    "when": "view == sumoExplorer && viewItem == profilesSection",
                    "group": "inline"
                },
                {
                    "command": "sumologic.switchProfile",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "inline"
                },
                {
                    "command": "sumologic.editProfile",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "profile@1"
                },
                {
                    "command": "sumologic.testConnection",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "profile@2"
                },
                {
                    "command": "sumologic.deleteProfile",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "profile@3"
                },
                {
                    "command": "sumologic.refreshExplorer",
                    "when": "view == sumoExplorer && viewItem == storageSection",
                    "group": "inline"
                },
                {
                    "command": "sumologic.refreshExplorer",
                    "when": "view == sumoExplorer && viewItem == storageFolder",
                    "group": "inline"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == storageFolder",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == storageFolder",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == storageFolder",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.openQueryResultAsWebview",
                    "when": "view == sumoExplorer && viewItem == queryJsonFile",
                    "group": "navigation@0"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == storageFile",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == storageFile",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == storageFile",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.deleteStorageItem",
                    "when": "view == sumoExplorer && viewItem == storageFile",
                    "group": "delete@1"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == queryJsonFile",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == queryJsonFile",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == queryJsonFile",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.deleteStorageItem",
                    "when": "view == sumoExplorer && viewItem == queryJsonFile",
                    "group": "delete@1"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == recentQuery",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == recentQuery",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == recentQuery",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == recentResult",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == recentResult",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == recentResult",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.revealStorageInExplorer",
                    "when": "view == sumoExplorer && viewItem == recentContent",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.copyStoragePath",
                    "when": "view == sumoExplorer && viewItem == recentContent",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openStorageInTerminal",
                    "when": "view == sumoExplorer && viewItem == recentContent",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.viewLibraryNodeDetails",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "navigation@1"
                },
                {
                    "command": "sumologic.openLibraryNodeJson",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "navigation@2"
                },
                {
                    "command": "sumologic.openLibraryNodeInWeb",
                    "when": "view == sumoExplorer && viewItem =~ /^library_.*_Folder$/",
                    "group": "navigation@3"
                },
                {
                    "command": "sumologic.copyLibraryNodeId",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "clipboard@1"
                },
                {
                    "command": "sumologic.copyLibraryNodePath",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "clipboard@2"
                },
                {
                    "command": "sumologic.refreshLibraryNode",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "refresh@1"
                },
                {
                    "command": "sumologic.exportLibraryNodeToFile",
                    "when": "view == sumoExplorer && viewItem =~ /^library_/",
                    "group": "export@1"
                },
                {
                    "command": "sumologic.fetchRecursiveFolder",
                    "when": "view == sumoExplorer && viewItem =~ /^library_.*_Folder$/",
                    "group": "fetch@1"
                },
                {
                    "command": "sumologic.createScope",
                    "when": "view == sumoExplorer && viewItem == scopesSection",
                    "group": "inline"
                },
                {
                    "command": "sumologic.listMyDashboards",
                    "when": "view == sumoExplorer && viewItem == dashboardsSection",
                    "group": "inline"
                },
                {
                    "command": "sumologic.editScope",
                    "when": "view == sumoExplorer && viewItem == scope",
                    "group": "scope@1"
                },
                {
                    "command": "sumologic.profileScope",
                    "when": "view == sumoExplorer && viewItem == scope",
                    "group": "scope@2"
                },
                {
                    "command": "sumologic.sampleScopeLogs",
                    "when": "view == sumoExplorer && viewItem == scope",
                    "group": "scope@3"
                },
                {
                    "command": "sumologic.deleteScope",
                    "when": "view == sumoExplorer && viewItem == scope",
                    "group": "scope@4"
                },
                {
                    "command": "sumologic.cacheScopeMetadata",
                    "when": "view == sumoExplorer && viewItem == scope",
                    "group": "scope@5"
                }
            ],
            "editor/context": [
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@1"
                },
                {
                    "command": "sumologic.runQueryWebview",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@2"
                },
                {
                    "command": "sumologic.runQueryAndChart",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@3"
                },
                {
                    "command": "sumologic.openSearchInWeb",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@4"
                }
            ],
            "explorer/context": [
                {
                    "command": "sumologic.chartCSV",
                    "when": "resourceExtname == .csv",
                    "group": "sumo"
                },
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceExtname == .sumo",
                    "group": "sumo"
                }
            ],
            "editor/title": [
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.runQueryWebview",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.runQueryAndChart",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.openSearchInWeb",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.chartCSV",
                    "when": "resourceExtname == .csv",
                    "group": "navigation"
                }
            ]
        },
        "languages": [
            {
                "id": "sumo",
                "aliases": [
                    "sumo",
                    "sumo"
                ],
                "extensions": [
                    ".sumo"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "snippets": [
            {
                "language": "sumo",
                "path": "./snippets.json"
            }
        ],
        "grammars": [
            {
                "language": "sumo",
                "scopeName": "source.sumo",
                "path": "./syntaxes/sumo.tmLanguage.json"
            }
        ],
        "keybindings": [
            {
                "command": "sumologic.runQuery",
                "key": "ctrl+enter",
                "mac": "cmd+enter",
                "when": "resourceLangId == sumo"
            },
            {
                "command": "sumologic.runQueryWebview",
                "key": "ctrl+shift+enter",
                "mac": "cmd+shift+enter",
                "when": "resourceLangId == sumo"
            },
            {
                "command": "sumologic.runQueryAndChart",
                "key": "ctrl+shift+c",
                "mac": "cmd+shift+c",
                "when": "resourceLangId == sumo"
            },
            {
                "command": "sumologic.newSumoFile",
                "key": "ctrl+shift+n",
                "mac": "cmd+shift+n"
            },
            {
                "command": "sumologic.switchProfile",
                "key": "ctrl+k ctrl+s",
                "mac": "cmd+k cmd+s"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint \"src/**/*.ts\"",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run rebuild",
        "test": "node ./out/test/runTest.js",
        "test:unit": "npm test",
        "test:integration": "SUMO_ACCESS_ID=$SUMO_ACCESS_ID SUMO_ACCESS_KEY=$SUMO_ACCESS_KEY npm test",
        "test:all": "npm run test:unit && npm run test:integration",
        "rebuild": "electron-rebuild -f -w better-sqlite3 -v 37.3.1",
        "postinstall": "npm run rebuild"
    },
    "devDependencies": {
        "@electron/rebuild": "^4.0.1",
        "@eslint/js": "^9.13.0",
        "@types/better-sqlite3": "^7.6.13",
        "@types/mocha": "^10.0.10",
        "@types/node": "^22",
        "@types/vscode": "^1.100.0",
        "@vscode/test-electron": "^2.5.2",
        "eslint": "^9.13.0",
        "mocha": "^11.7.4",
        "typescript": "^5.9.3",
        "typescript-eslint": "^8.26.0"
    },
    "dependencies": {
        "better-sqlite3": "^12.4.1",
        "echarts": "^6.0.0"
    }
}
