{
    "name": "sumo-query-language",
    "displayName": "Sumo Logic Query Language",
    "description": "Language support for Sumo Logic search queries with syntax highlighting, snippets, and autocomplete",
    "version": "0.0.3",
    "publisher": "tba",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/yourusername/hajime"
    },
    "keywords": [
        "sumo",
        "sumo logic",
        "query",
        "log analytics",
        "search"
    ],
    "engines": {
        "vscode": "^1.74.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets"
    ],
    "main": "./out/extension.js",
    "activationEvents": [
        "onLanguage:sumo"
    ],
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "sumo-explorer",
                    "title": "Sumo Logic",
                    "icon": "resources/sumo-icon.svg"
                }
            ]
        },
        "views": {
            "sumo-explorer": [
                {
                    "id": "sumoExplorer",
                    "name": "Explorer",
                    "contextualTitle": "Sumo Logic Explorer"
                }
            ]
        },
        "configuration": {
            "title": "Sumo Logic",
            "properties": {
                "sumologic.profiles": {
                    "type": "array",
                    "default": [],
                    "description": "Configured Sumo Logic connection profiles"
                },
                "sumologic.activeProfile": {
                    "type": "string",
                    "description": "Currently active connection profile"
                },
                "sumologic.fileStoragePath": {
                    "type": "string",
                    "default": "${workspaceFolder}/output",
                    "description": "Directory path for storing profile-specific files. Supports ${workspaceFolder} variable. Can be absolute or relative to workspace root."
                },
                "sumologic.webviewPageSize": {
                    "type": "number",
                    "default": 100,
                    "minimum": 10,
                    "maximum": 10000,
                    "description": "Number of rows to display per page in webview query results"
                }
            }
        },
        "commands": [
            {
                "command": "sumologic.createProfile",
                "title": "Sumo Logic: Create/Update Connection Profile"
            },
            {
                "command": "sumologic.switchProfile",
                "title": "Sumo Logic: Switch Profile"
            },
            {
                "command": "sumologic.listProfiles",
                "title": "Sumo Logic: List Profiles"
            },
            {
                "command": "sumologic.deleteProfile",
                "title": "Sumo Logic: Delete Profile"
            },
            {
                "command": "sumologic.runQuery",
                "title": "Sumo Logic: Run Query",
                "icon": "$(play)"
            },
            {
                "command": "sumologic.testConnection",
                "title": "Sumo Logic: Test Connection"
            },
            {
                "command": "sumologic.fetchCustomFields",
                "title": "Sumo Logic: Fetch Custom Fields for Autocomplete"
            },
            {
                "command": "sumologic.fetchPartitions",
                "title": "Sumo Logic: Fetch Partitions for Autocomplete"
            },
            {
                "command": "sumologic.fetchCollectors",
                "title": "Sumo Logic: Fetch Collectors"
            },
            {
                "command": "sumologic.getCollector",
                "title": "Sumo Logic: Get Collector by ID"
            },
            {
                "command": "sumologic.getSources",
                "title": "Sumo Logic: Get Sources for Collector"
            },
            {
                "command": "sumologic.viewAutocomplete",
                "title": "Sumo Logic: View Autocomplete Data"
            },
            {
                "command": "sumologic.clearAutocomplete",
                "title": "Sumo Logic: Clear Autocomplete Data"
            },
            {
                "command": "sumologic.getPersonalFolder",
                "title": "Sumo Logic: Get Personal Folder"
            },
            {
                "command": "sumologic.getFolder",
                "title": "Sumo Logic: Get Folder by ID"
            },
            {
                "command": "sumologic.getContentByPath",
                "title": "Sumo Logic: Get Content by Path"
            },
            {
                "command": "sumologic.getContentById",
                "title": "Sumo Logic: Get Content Path by ID"
            },
            {
                "command": "sumologic.exportContent",
                "title": "Sumo Logic: Export Content by ID"
            },
            {
                "command": "sumologic.exportAdminRecommended",
                "title": "Sumo Logic: Export Admin Recommended Folder"
            },
            {
                "command": "sumologic.exportGlobalFolder",
                "title": "Sumo Logic: Export Global Folder"
            },
            {
                "command": "sumologic.exportInstalledApps",
                "title": "Sumo Logic: Export Installed Apps Folder"
            },
            {
                "command": "sumologic.chartCSV",
                "title": "Sumo Logic: Chart CSV Data",
                "icon": "$(graph)"
            },
            {
                "command": "sumologic.runQueryAndChart",
                "title": "Sumo Logic: Run Query and Chart Results",
                "icon": "$(graph-line)"
            },
            {
                "command": "sumologic.runQueryWebview",
                "title": "Sumo Logic: Run Query in Webview",
                "icon": "$(table)"
            },
            {
                "command": "sumologic.cleanupOldFiles",
                "title": "Sumo Logic: Cleanup Old Files"
            },
            {
                "command": "sumologic.cacheKeyMetadata",
                "title": "Sumo Logic: Cache Key Metadata"
            },
            {
                "command": "sumologic.newSumoFile",
                "title": "Sumo Logic: New Query File"
            },
            {
                "command": "sumologic.refreshExplorer",
                "title": "Sumo Logic: Refresh Explorer",
                "icon": "$(refresh)"
            }
        ],
        "menus": {
            "view/title": [
                {
                    "command": "sumologic.refreshExplorer",
                    "when": "view == sumoExplorer",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.createProfile",
                    "when": "view == sumoExplorer",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "sumologic.switchProfile",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "inline"
                },
                {
                    "command": "sumologic.deleteProfile",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "profile"
                },
                {
                    "command": "sumologic.testConnection",
                    "when": "view == sumoExplorer && viewItem == profile",
                    "group": "profile"
                }
            ],
            "editor/context": [
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@1"
                },
                {
                    "command": "sumologic.runQueryWebview",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@2"
                },
                {
                    "command": "sumologic.runQueryAndChart",
                    "when": "resourceLangId == sumo",
                    "group": "sumo@3"
                }
            ],
            "explorer/context": [
                {
                    "command": "sumologic.chartCSV",
                    "when": "resourceExtname == .csv",
                    "group": "sumo"
                },
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceExtname == .sumo",
                    "group": "sumo"
                }
            ],
            "editor/title": [
                {
                    "command": "sumologic.runQuery",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.runQueryWebview",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.runQueryAndChart",
                    "when": "resourceLangId == sumo",
                    "group": "navigation"
                },
                {
                    "command": "sumologic.chartCSV",
                    "when": "resourceExtname == .csv",
                    "group": "navigation"
                }
            ]
        },
        "languages": [
            {
                "id": "sumo",
                "aliases": [
                    "sumo",
                    "sumo"
                ],
                "extensions": [
                    ".sumo"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "snippets": [
            {
                "language": "sumo",
                "path": "./snippets.json"
            }
        ],
        "grammars": [
            {
                "language": "sumo",
                "scopeName": "source.sumo",
                "path": "./syntaxes/sumo.tmLanguage.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "eslint \"src/**/*.ts\"",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/test/runTest.js",
        "test:unit": "npm test",
        "test:integration": "SUMO_ACCESS_ID=$SUMO_ACCESS_ID SUMO_ACCESS_KEY=$SUMO_ACCESS_KEY npm test",
        "test:all": "npm run test:unit && npm run test:integration"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.10",
        "@types/node": "^18",
        "@types/vscode": "^1.73.0",
        "@typescript-eslint/eslint-plugin": "^7.14.0",
        "@typescript-eslint/parser": "^7.14.0",
        "@vscode/test-electron": "^2.5.2",
        "eslint": "^8.26.0",
        "mocha": "^11.7.4",
        "typescript": "^5.5.2"
    },
    "dependencies": {
        "echarts": "^6.0.0"
    }
}
